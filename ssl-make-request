#!/usr/bin/env bash

### Config temp write
echo "[req]
default_bits = 2048
prompt = no
default_md = sha512
req_extensions = req_ext
distinguished_name = dn

[ dn ]
C=<YOUR COUNTRY>
ST=<YOUR STATE>
L=<YOUR CITY>
O=<YOUR ORGANIZATION NAME>" > config_temp

### Check OU
read -rp "Enter OU: " OU
while [ -z "$OU" ] 
do
    read -rp "Enter NOT EMPTY OU: " OU
done
echo "OU=$OU" >> config_temp

echo "emailAddress=<YOUR EMAIL>" >> config_temp

### Check CN
read -rp "Enter CN: " CN
while [ -z "$CN" ] 
do
    read -rp "Enter NOT EMPTY CN: " CN
done
echo "CN = $CN" >> config_temp

echo "
[ req_ext ]
subjectAltName = @alt_names

[ alt_names ]" >> config_temp


### Check IP/DNS function
function check_var_list() {
    opt=$1

    COUNT_VAR=1
    VAR_ARRAY=()

    if [ "$opt" = "dns" ]; then
        VAR_NAME="DNS"
        read -rp "$VAR_NAME.1 = $CN, press ENTER to accept OR enter NEW value: " CURRENT_VAR
        if [ -z "$CURRENT_VAR" ]; then
            VAR_ARRAY+=("$CN")
        else
            VAR_ARRAY+=("$CURRENT_VAR")
        fi
    elif [ "$opt" = "ip" ]; then
        VAR_NAME="IP"
        read -rp "Enter $VAR_NAME: " CURRENT_VAR
        while [ -z "$CURRENT_VAR" ]
        do
            read -rp "Enter NOT EMPTY $VAR_NAME: " CURRENT_VAR
        done
        VAR_ARRAY+=("$CURRENT_VAR")
    fi

    ANOTHER_VAR=1
    while [ $ANOTHER_VAR -eq 1 ]
    do
        read -rp "Do you need another $VAR_NAME(y,N): " OPT
        if [[ "$OPT" =~ ^("y"|"Y")$ ]]; then
            ((COUNT_VAR++))
            
            read -rp "Enter $VAR_NAME($COUNT_VAR): " CURRENT_VAR
            while [ -z "$CURRENT_VAR" ]
            do
                read -rp "Enter not EMPTY $VAR_NAME($COUNT_VAR): " CURRENT_VAR
            done
            VAR_ARRAY+=("$CURRENT_VAR")
        else ANOTHER_VAR=0
        fi
    done

    for i in $(/usr/bin/seq 0 $(("$COUNT_VAR" - 1)))
    do
        echo "$VAR_NAME.$(("$i"+1)) = ${VAR_ARRAY[$i]}" >> config_temp
    done
}

### Check DNS
check_var_list dns

### Check IP
check_var_list ip

### Create DIR
echo "Creating dir for CN"
if [ -d "$CN" ]; then
    echo "Request dir is already created, skipping..."
else
    if mkdir "$CN"; then
        echo "Dir for request has been created"
    else
        echo "FAILED: to create request dir"
        exit 1
    fi
fi

### Execute reques and get csr and key
if /usr/bin/openssl req -new -sha512 -nodes -out "$CN"/"$CN".csr -newkey rsa:2048 -keyout "$CN"/"$CN".key -config config_temp; then
    /usr/bin/chmod 777 "$CN"/*
    /usr/bin/rm -f config_temp
    echo "SUCCESS!"

else "FAILED!"
fi
